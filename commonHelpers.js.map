{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const userSelectedDate = selectedDates[0];\n\n    if (userSelectedDate < new Date()) {\n      document.querySelector('[data-start]').disabled = true;\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n    } else {\n      document.querySelector('[data-start]').disabled = false;\n    }\n  },\n};\n\nconst flatpickrInstance = flatpickr(\"#datetime-picker\", options);\n\ndocument.querySelector(\"#datetime-picker\").addEventListener(\"focus\", () => {\n  flatpickrInstance.open();\n});\n\n\ndocument.querySelector('[data-start]').addEventListener('click', startTimer);\n\nfunction startTimer() {\n  const userSelectedDate = flatpickr.parseDate(document.querySelector('#datetime-picker').value);\n  const countdownInterval = setInterval(updateTimer, 1000);\n\n  function updateTimer() {\n    const timeRemaining = userSelectedDate - new Date();\n\n    if (timeRemaining <= 0) {\n      clearInterval(countdownInterval);\n      displayTime({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n    } else {\n      const formattedTime = convertMs(timeRemaining);\n      displayTime(formattedTime);\n    }\n  }\n\n  function displayTime({ days, hours, minutes, seconds }) {\n    document.querySelector('[data-days]').textContent = addLeadingZero(days);\n    document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n    document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n    document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n  }\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value < 10 ? `0${value}` : value;\n}\n"],"names":["options","selectedDates","iziToast","flatpickrInstance","flatpickr","startTimer","userSelectedDate","countdownInterval","updateTimer","timeRemaining","displayTime","formattedTime","convertMs","days","hours","minutes","seconds","addLeadingZero","ms","value"],"mappings":"+IAKA,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACIA,EAAc,GAEhB,IAAI,MACzB,SAAS,cAAc,cAAc,EAAE,SAAW,GAClDC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,GAED,SAAS,cAAc,cAAc,EAAE,SAAW,EAErD,CACH,EAEMC,EAAoBC,EAAU,mBAAoBJ,CAAO,EAE/D,SAAS,cAAc,kBAAkB,EAAE,iBAAiB,QAAS,IAAM,CACzEG,EAAkB,KAAI,CACxB,CAAC,EAGD,SAAS,cAAc,cAAc,EAAE,iBAAiB,QAASE,CAAU,EAE3E,SAASA,GAAa,CACpB,MAAMC,EAAmBF,EAAU,UAAU,SAAS,cAAc,kBAAkB,EAAE,KAAK,EACvFG,EAAoB,YAAYC,EAAa,GAAI,EAEvD,SAASA,GAAc,CACrB,MAAMC,EAAgBH,EAAmB,IAAI,KAE7C,GAAIG,GAAiB,EACnB,cAAcF,CAAiB,EAC/BG,EAAY,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,MACpD,CACL,MAAMC,EAAgBC,EAAUH,CAAa,EAC7CC,EAAYC,CAAa,CAC1B,CACF,CAED,SAASD,EAAY,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACtD,SAAS,cAAc,aAAa,EAAE,YAAcC,EAAeJ,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcI,EAAeH,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAeF,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcE,EAAeD,CAAO,CAC9E,CACH,CAEA,SAASJ,EAAUM,EAAI,CAMrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeE,EAAO,CAC7B,OAAOA,EAAQ,GAAK,IAAIA,IAAUA,CACpC"}